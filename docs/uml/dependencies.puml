@startuml


interface YandexClient {
    QueryResponse query(String query)
}

class SearchController {
    private Search searchOperation;

    Response search(List<String> queries)
}

interface Search {
    SearchResponse invoke(SearchRequest request);
}

interface DataLoader {
    List<SearchXmlResponse> load(List<String> queryWords);
}

interface Calculator<T> {
    List<CalculatedRow> calculate(List<T> results)
}

class SearchRequest {
    private List<String> queries
}

class SearchResponse {
    private List<String> groupBy
    private Integer count
}

class SearchXmlResponse {
    private String url;
    private String query;
}

class CalculatedRow {
    private List<String> groupBy;
    private Integer count;
}

class BusinessRuleDecorator implements Search {
    private Search inner;

    SearchResponse invoke(SearchRequest request);
}

class SearchOperation implements Search {
    private DataLoader dataLoader;
    private Calculator Calculator;

    SearchResponse invoke(SearchRequest request);
}

class CommonDataLoader implements DataLoader {
    private YandexClient yandexClient;

    List<SearchXmlResponse> load(List<String> queryWords);
}

class DomainCalculator implements Calculator {
    List<CalculatedRow> calculate(List<SearchXmlResponse> results)
}

SearchOperation *-- DataLoader
SearchOperation *-- Calculator

CommonDataLoader *-- YandexClient

SearchController *-- Search

@enduml
